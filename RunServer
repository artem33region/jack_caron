Создание моделей Django для сущностей:
from django.db import models

class Product(models.Model):
    creator = models.CharField(max_length=100)
    title = models.CharField(max_length=255)
    start_date_time = models.DateTimeField()
    cost = models.DecimalField(max_digits=8, decimal_places=2)
    
class Lesson(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    title = models.CharField(max_length=255)
    video_link = models.CharField(max_length=255)

class Group(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    group_name = models.CharField(max_length=100)
    min_users = models.PositiveIntegerField()
    max_users = models.PositiveIntegerField()

class User(models.Model):
    username = models.CharField(max_length=100)
    groups = models.ManyToManyField(Group)

Определение доступа пользователя к продукту:
from django.db import models

class Product(models.Model):
    creator = models.CharField(max_length=100)
    title = models.CharField(max_length=255)
    start_date_time = models.DateTimeField()
    cost = models.DecimalField(max_digits=8, decimal_places=2)
    
    def check_user_access(self, user):
        # Предположим, что у каждого продукта есть список пользователей с доступом
        access_granted_users = ['user1', 'user2', 'user3']

        if user.username in access_granted_users:
            return True
        else:
            return False
Создание и применение миграций:

python manage.pymakemigrations
python manage.py migrate

Создание API с использованием Django REST framework:
from rest_framework import serializers, viewsets
from .models import Product

class ProductSerializer(serializers.ModelSerializer):
    class Meta:
        model = Product
        fields = 'all'

class ProductViewSet(viewsets.ModelViewSet):
    queryset = Product.objects.all()
    serializer_class = ProductSerializer

from django.urls import path, include
from rest_framework import routers
from .views import ProductViewSet

router = routers.DefaultRouter()
router.register(r'products', ProductViewSet)

urlpatterns = [
    path('', include(router.urls)),
]

Регистрация маршрутов API:
from django.urls import path, include
from rest_framework import routers
from .views import ProductViewSet

router = routers.DefaultRouter()
router.register(r'products', ProductViewSet)

urlpatterns = [
    path('', include(router.urls)),
]

Запуск сервера Django:
python manage.py runserver
